Started by GitHub push by prit3230
Running as SYSTEM
Building in workspace /var/lib/jenkins/workspace/todo-node-app
The recommended git tool is: NONE
using credential jenkins-github
 > git rev-parse --resolve-git-dir /var/lib/jenkins/workspace/todo-node-app/.git # timeout=10
Fetching changes from the remote Git repository
 > git config remote.origin.url https://github.com/prit3230/To-do-list-CI-CD.git # timeout=10
Fetching upstream changes from https://github.com/prit3230/To-do-list-CI-CD.git
 > git --version # timeout=10
 > git --version # 'git version 2.43.0'
using GIT_SSH to set credentials It is for integrating jenkins and github
Verifying host key using known hosts file
You're using 'Known hosts file' strategy to verify ssh host keys, but your known_hosts file does not exist, please go to 'Manage Jenkins' -> 'Security' -> 'Git Host Key Verification Configuration' and configure host key verification.
 > git fetch --tags --force --progress -- https://github.com/prit3230/To-do-list-CI-CD.git +refs/heads/*:refs/remotes/origin/* # timeout=10
 > git rev-parse refs/remotes/origin/main^{commit} # timeout=10
Checking out Revision ef98fec0ac2f022ed71bcb8d62225c67656e2bae (refs/remotes/origin/main)
 > git config core.sparsecheckout # timeout=10
 > git checkout -f ef98fec0ac2f022ed71bcb8d62225c67656e2bae # timeout=10
Commit message: "Update todo.ejs"
 > git rev-list --no-walk 371cff7b055ee48b334d73bde191da29149a86eb # timeout=10
[todo-node-app] $ /bin/sh -xe /tmp/jenkins1074717001392698077.sh
+ docker build . -t node-app-todo1
DEPRECATED: The legacy builder is deprecated and will be removed in a future release.
            Install the buildx component to build images with BuildKit:
            https://docs.docker.com/go/buildx/

Sending build context to Docker daemon  25.39MB

Step 1/6 : FROM node:12.2.0-alpine
 ---> f391dabf9dce
Step 2/6 : WORKDIR app
 ---> Using cache
 ---> e4632bd46bcb
Step 3/6 : COPY . .
 ---> e0ad9cfaae9c
Step 4/6 : RUN npm install
 ---> Running in 8d9c21da26cd
[91mnpm[0m[91m [0m[91mWARN[0m[91m read-shrinkwrap This version of npm is compatible with lockfileVersion@1, but package-lock.json was generated for lockfileVersion@2. I'll try to do my best with it!
[0m
> ejs@2.7.4 postinstall /app/node_modules/ejs
> node ./postinstall.js

Thank you for installing [35mEJS[0m: built with the [32mJake[0m JavaScript build tool ([32mhttps://jakejs.com/[0m)

[91mnpm[0m[91m WARN my-todolist@0.1.0 No repository field.
npm WARN my-todolist@0.1.0 No license field.

[0mremoved 1 package, updated 291 packages and audited 291 packages in 11.895s
found 17 vulnerabilities (1 low, 7 moderate, 6 high, 3 critical)
  run `npm audit fix` to fix them, or `npm audit` for details
Removing intermediate container 8d9c21da26cd
 ---> dbfc8ed7de6e
Step 5/6 : EXPOSE 8000
 ---> Running in edaae7ac379d
Removing intermediate container edaae7ac379d
 ---> 470ecb32bfe2
Step 6/6 : CMD ["node","app.js"]
 ---> Running in cecb0d69f791
Removing intermediate container cecb0d69f791
 ---> 1c14f7c33174
Successfully built 1c14f7c33174
Successfully tagged node-app-todo1:latest
+ docker run -d --name node-app-container1 -p 8000:8000 node-app-todo1
01b4aaf3ede394aeb2ff25373a865e97d76444689a69466a6f412321243fdc99
Finished: SUCCESS
